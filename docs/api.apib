FORMAT: 1A
HOST: http://localhost:8060

# Hotel Booking Service

[Hotel Booking Service](https://github.com/reinhardlinardi/hotelbookingservice) REST API documentation.

## Customer [/customer]

### Register Profile [POST]

Register new customer profile.

+ Request (application/json)
    + Attributes
        + name (string, required) - Customer name
        + id (string, required) - Customer ID or passport
        + email (string, required) - Customer email
    + Body
        
            {
                "name" : "Cisco",
                "id" : "123456789012345",
                "email" : "cisco@std.stei.itb.ac.id"
            }

+ Response 200 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
        + data (object, required) - Response data
            + id (number, optional) - Profile ID
    + Body

            {
                "success" : true,
                "message" : "OK",
                "data" :
                {
                    "id" : 1
                }
            }

+ Response 400 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
        + data (object, required) - Response data
            + id (number, optional) - Profile ID
    + Body

            {
                "success" : false,
                "message" : "Missing required parameters or invalid data",
                "data" : null
            }

## Customer by ID [/customer/{id}]

+ Parameters
    + id (number, required) - Profile ID

### Update Profile [PUT]

Update customer profile.

+ Request (application/json)
    + Attributes
        + name (string, optional) - Customer name
        + id (string, optional) - Customer ID or passport
        + email (string, optional) - Customer email
    + Body

            {
                "name" : "Cisco",
                "id" : "123451234512345",
                "email" : "cisco@std.stei.itb.ac.id"
            }

+ Response 200 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
    + Body

            {
                "success" : true,
                "message" : "OK"
            }

+ Response 400 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
    + Body

            {
                "success" : false,
                "message" : "Invalid data"
            }

+ Response 404 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
    + Body

            {
                "success" : false,
                "message" : "Invalid ID"
            }

## Customer ID by Profile [/customer{?name,id,email}]

+ Parameters
    + name (string, required) - Customer name
    + id (string, required) - Customer ID or passport
    + email (string, required) - Customer email

### Get ID by Profile [GET]

Get customer ID by profile.

+ Response 200 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
        + data (object, required) - Response data
            + id (number, optional) - Profile ID
    + Body

            {
                "success" : true,
                "message" : "OK",
                "data" :
                {
                    "id" : 1
                }
            }

+ Response 400 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
        + data (object, required) - Response data
            + id (number, optional) - Profile ID
    + Body

            {
                "success" : false,
                "message" : "Missing required parameters or invalid data",
                "data" : null
            }

## Invoice [/invoice]

### Create Invoice [POST]

Create new invoice.

+ Request (application/json)
    + Attributes
        + room_id (number, required) - Room ID
        + customer_id (number, required) - Customer profile ID
        + in (string, required) - Check in date (DD-MM-YYYY)
        + out (string, required) - Check out date (DD-MM-YYYY)
    + Body

            {
                "room_id" : 1,
                "customer_id" : 1,
                "in" : "11-11-2018",
                "out" : "13-11-2018"
            }

+ Response 200 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
        + data (object, required) - Response data
            + id (number, optional) - Invoice ID
    + Body

            {
                "success" : true,
                "message" : "OK",
                "data" :
                {
                    "id" : 1
                }
            }

+ Response 400 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
        + data (object, required) - Response data
            + id (number, optional) - Invoice ID
    + Body

            {
                "success" : false,
                "message" : "Missing required parameters or invalid data",
                "data" : null
            }

## Invoice by ID [/invoice/{id}]

+ Parameters
    + id (number, required) - Invoice ID

### Get Invoice [GET]

Get details of an invoice.

+ Response 200 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
        + data (object, required) - Response data
            + room_id (number, optional) - Room ID
            + customer_id (number, optional) - Customer profile ID
            + in (string, optional) - Check in date (DD-MM-YYYY)
            + out (string, optional) - Check out date (DD-MM-YYYY)
            + price (number, optional) - Total price (IDR)
            + paid (boolean, optional) - Payment status
            + cancelled (boolean, optional) - Cancellation status
    + Body

            {
                "success" : true,
                "message" : "OK",
                "data" :
                {
                    "room_id": 1,
                    "customer_id": 1,
                    "in" : "11-11-2018",
                    "out" : "13-11-2018",
                    "price" : 500000,
                    "paid" : true,
                    "cancelled" : false
                }
            }

+ Response 404 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
        + data (object, required) - Response data
            + room_id (number, optional) - Room ID
            + customer_id (number, optional) - Customer profile ID
            + in (string, optional) - Check in date (DD-MM-YYYY)
            + out (string, optional) - Check out date (DD-MM-YYYY)
            + price (number, optional) - Total price (IDR)
    + Body

            {
                "success" : false,
                "message" : "Invalid ID",
                "data" : null
            }

### Update Invoice Payment Status [PUT]

Update invoice payment status.

+ Response 200 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
    + Body

            {
                "success" : true,
                "message" : "OK"
            }

+ Response 404 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
    + Body

            {
                "success" : false,
                "message" : "Invalid ID"
            }

### Cancel Invoice [DELETE]

Cancel an invoice.

+ Response 200 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
    + Body

            {
                "success" : true,
                "message" : "OK"
            }

+ Response 404 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
    + Body

            {
                "success" : false,
                "message" : "Invalid ID"
            }

## Employee [/employee]

### Add Employee [POST]

Add new employee profile.

+ Request (application/json)
    + Attributes
        + name (string, required) - Employee name
        + address (string, required) - Employee address
        + job_desc (string, required) - Employee job description

    + Body

            {
                "name" : "Dono",
                "address" : "Bandung",
                "job_desc" : "Membersihkan semua kamar di lantai 2"
            }

+ Response 200 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
        + data (object, required) - Response data
            + id (number, optional) - Employee ID
    + Body

            {
                "success" : true,
                "message" : "OK",
                "data" :
                {
                    "id" : 1
                }
            }

+ Response 400 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
        + data (object, required) - Response data
            + id (number, optional) - Employee ID
    + Body

            {
                "success" : false,
                "message" : "Missing required parameters or invalid data",
                "data" : null
            }

##  Employee by ID [/employee/{id}]

+ Parameters
    + id (number, required) - Employee ID

### Update Employee [PUT]

Update employee profile.

+ Request (application/json)
    + Attributes
        + name (string, optional) - Employee name
        + address (string, optional) - Employee address
        + job_desc (string, optional) - Employee job description
    + Body

            {
                "name" : "Dono",
                "address" : "Bandung",
                "job_desc" : "Membersihkan kamar di lantai 3"
            }

+ Response 200 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
    + Body

            {
                "success" : true,
                "message" : "OK"
            }

+ Response 400 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
    + Body

            {
                "success" : false,
                "message" : "Invalid data"
            }

+ Response 404 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
    + Body

            {
                "success" : false,
                "message" : "Invalid ID"
            }

### Delete Employee [DELETE]

Delete employee profile.

+ Response 200 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
    + Body

            {
                "success" : true,
                "message" : "OK"
            }

+ Response 404 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
    + Body

            {
                "success" : false,
                "message" : "Invalid ID"
            }

## Agent [/agent]

### Register Agent [POST]

Register new agent profile.

+ Request (application/json)
    + Attributes
        + name (string, required) - Agent name
        + address (string, required) - Agent adress
        + expire_date (string, required) - Agent contract expire date (DD-MM-YYYY)
    + Body

            {
                "name" : "Traveloka",
                "address" : "Jakarta",
                "expire_date" : "11-11-2020"
            }

+ Response 200 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
        + data (object, required) - Response data
            + id (number, optional) - Agent ID
    + Body

            {
                "success" : true,
                "message" : "OK",
                "data" :
                {
                    "id" : 1
                }
            }

+ Response 400 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
        + data (object, required) - Response data
            + id (number, optional) - Agent ID
    + Body

            {
                "success" : false,
                "message" : "Missing required parameters or invalid data",
                "data" : null
            }

## Agent by ID [/agent/{id}]

+ Parameters
    + id (number, required) - Agent ID

### Update Agent [PUT]

Update agent profile.

+ Request (application/json)
    + Attributes
        + name (string, optional) - Agent name
        + address (string, optional) - Agent address
        + expire_date (string, optional) - Agent contract expire date (DD-MM-YYYY)
    + Body

            {
                "name" : "Traveloka",
                "address" : "Bandung",
                "expire_date" : "11-11-2023"
            }

+ Response 200 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
    + Body

            {
                "success" : true,
                "message" : "OK"
            }

+ Response 400 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
    + Body

            {
                "success" : false,
                "message" : "Invalid data"
            }

+ Response 404 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
    + Body

            {
                "success" : false,
                "message" : "Invalid ID"
            }

### Delete Agent [DELETE]

Delete agent profile.

+ Response 200 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
    + Body

            {
                "success" : true,
                "message" : "OK"
            }

+ Response 404 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
    + Body

            {
                "success" : false,
                "message" : "Invalid ID"
            }

## Room [/room]

### Create Room [POST]

Create new room.

+ Request (application/json)
    + Attributes
        + room_type (enum[string], required) - Room type
            + Members
                + "Single"
                + "Double"
                + "Family"
        + description (string, required) - Room description
        + tv (boolean, required) - Room facility
        + ac (boolean, required) - Room facility
        + internet (boolean, required) - Room facility
        + hot_water (boolean, required) - Room facility
        + refrigerator (boolean, required) - Room facility
        + safe_deposit_box (boolean, required) - Room facility
        + wardrobe (boolean, required) - Room facility
        + window (boolean, required) - Room facility
        + balcony (boolean, required) - Room facility
        + price (number, required) - Room price (IDR)
    + Body

            {
                "room_type" : "Single",
                "description" : "Kamar single bed yang luas dengan fasilitas yang lengkap.",
                "tv" : true,
                "ac" : true,
                "internet"  : true,
                "hot_water"  : true,
                "refrigerator"  : true,
                "safe_deposit_box"  : true,
                "wardrobe"  : true,
                "window"  : false,
                "balcony"  : false,
                "price" : 400000
            }

+ Response 200 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
        + data (object, required) - Response data
            + id (number, optional) - Room ID
    + Body

            {
                "success" : true,
                "message" : "OK",
                "data" :
                {
                    "id" : 1
                }
            }

+ Response 400 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
        + data (object, required) - Response data
            + id (number, optional) - Room ID
    + Body

            {
                "success" : false,
                "message" : "Missing required parameters or invalid data",
                "data" : null
            }

## Room by Date [/room{?in,out}]

+ Parameters
    + in (string, required) - Check in date (DD-MM-YYYY)
    + out (string, required) - Check out date (DD-MM-YYYY)

### Get Available Rooms [GET]

Get details of all available room between check in date and check out date.

+ Response 200 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
        + data (array, required) - Array of room data
            + (object, optional) - Room data
                + id (number, required) - Room ID
                + room_type (enum[string], required) - Room type
                    + Members
                        + "Single"
                        + "Double"
                        + "Family"
                + description (string, required) - Room description
                + tv (boolean, required) - Room facility
                + ac (boolean, required) - Room facility
                + internet (boolean, required) - Room facility
                + hot_water (boolean, required) - Room facility
                + refrigerator (boolean, required) - Room facility
                + safe_deposit_box (boolean, required) - Room facility
                + wardrobe (boolean, required) - Room facility
                + window (boolean, required) - Room facility
                + balcony (boolean, required) - Room facility
                + price (number, required) - Room price (IDR)
    + Body

            {
                "success" : true,
                "message" : "OK",
                "data" :
                [
                    {
                        "id" : 1,
                        "room_type" : "Single",
                        "description" : "Kamar single bed yang luas dengan fasilitas yang lengkap.",
                        "tv" : true,
                        "ac" : true,
                        "internet"  : true,
                        "hot_water"  : true,
                        "refrigerator"  : true,
                        "safe_deposit_box"  : true,
                        "wardrobe"  : true,
                        "window"  : false,
                        "balcony"  : false,
                        "price" : 400000
                    },
                    {
                        "id" : 2,                        
                        "room_type" : "Double",
                        "description" : "Kamar double bed yang nyaman dengan pemandangan langsung ke kolam renang yang menakjubkan.",
                        "tv" : true,
                        "ac" : true,
                        "internet"  : true,
                        "hot_water"  : true,
                        "refrigerator"  : true,
                        "safe_deposit_box"  : true,
                        "wardrobe"  : true,
                        "window"  : true,
                        "balcony"  : false,
                        "price" : 600000
                    }
                ]
            }

+ Response 400 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
        + data (array, required) - Array of room data
            + (object, optional) - Room data
                + id (number, required) - Room ID
                + room_type (enum[string], required) - Room type
                    + Members
                        + "Single"
                        + "Double"
                        + "Family"
                + description (string, required) - Room description
                + tv (boolean, required) - Room facility
                + ac (boolean, required) - Room facility
                + internet (boolean, required) - Room facility
                + hot_water (boolean, required) - Room facility
                + refrigerator (boolean, required) - Room facility
                + safe_deposit_box (boolean, required) - Room facility
                + wardrobe (boolean, required) - Room facility
                + window (boolean, required) - Room facility
                + balcony (boolean, required) - Room facility
                + price (number, required) - Room price (IDR)
    + Body
    
            {
                "success" : false,
                "message" : "Missing required parameters or invalid data",
                "data" : null
            }

## Room by Date and Type [/room{?in,out,type}]

+ Parameters
    + in (string, required) - Check in date (DD-MM-YYYY)
    + out (string, required) - Check out date (DD-MM-YYYY)
    + type (string, required) - Room type

### Get Available Room IDs [GET]

Get all available room IDs between check in date and check out date with specified type.

+ Response 200 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
        + data (array[number], required) - Array of room IDs
    + Body

            {
                "success" : true,
                "message" : "OK",
                "data" : [ 1, 4, 10 ] 
            }

+ Response 400 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
        + data (array[number], required) - Array of room IDs
    + Body

            {
                "success" : false,
                "message" : "Missing required parameters or invalid data",
                "data" : null
            }

## Room by ID [/room/{id}]

+ Parameters
    + id (number, required) - Room ID

### Get Room Info [GET]

Get room information.

+ Response 200 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
        + data (object, required) - Response data
            + id (number, required) - Room ID
            + room_type (enum[string], optional) - Room type
                + Members
                    + "Single"
                    + "Double"
                    + "Family"
            + description (string, required) - Room description
            + tv (boolean, required) - Room facility
            + ac (boolean, required) - Room facility
            + internet (boolean, required) - Room facility
            + hot_water (boolean, required) - Room facility
            + refrigerator (boolean, required) - Room facility
            + safe_deposit_box (boolean, required) - Room facility
            + wardrobe (boolean, required) - Room facility
            + window (boolean, required) - Room facility
            + balcony (boolean, required) - Room facility
            + price (number, required) - Room price (IDR)
    + Body

            {
                "success" : true,
                "message" : "OK",
                "data" :
                {
                    "room_type" : "Single",
                    "description" : "Kamar single bed yang luas dengan fasilitas yang lengkap.",
                    "tv" : true,
                    "ac" : true,
                    "internet"  : true,
                    "hot_water"  : true,
                    "refrigerator"  : true,
                    "safe_deposit_box"  : true,
                    "wardrobe"  : true,
                    "window"  : false,
                    "balcony"  : false,
                    "price" : 400000
                }
            }

+ Response 404 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
        + data (object, required) - Response data
            + room_type (enum[string], optional) - Room type
                + Members
                    + "Single"
                    + "Double"
                    + "Family"
            + description (string, required) - Room description
            + tv (boolean, required) - Room facility
            + ac (boolean, required) - Room facility
            + internet (boolean, required) - Room facility
            + hot_water (boolean, required) - Room facility
            + refrigerator (boolean, required) - Room facility
            + safe_deposit_box (boolean, required) - Room facility
            + wardrobe (boolean, required) - Room facility
            + window (boolean, required) - Room facility
            + balcony (boolean, required) - Room facility
            + price (number, required) - Room price (IDR)
    + Body

            {
                "success" : false,
                "message" : "Invalid ID",
                "data" : null
            }

### Delete Room [DELETE]

Delete room.

+ Response 200 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
    + Body

            {
                "success" : true,
                "message" : "OK"
            }

+ Response 404 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
    + Body

            {
                "success" : false,
                "message" : "Invalid ID"
            }

## Room by ID and Date [/room/{id}{?in,out}]

+ Parameters
    + id (number, required) - Room ID
    + in (string, required) - Check in date (DD-MM-YYYY)
    + out (string, required) - Check out date (DD-MM-YYYY)

### Get Room Availability [GET]

Get room availability between check in date and check out date.

+ Response 200 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
        + data (object, required) - Response data
            + available (boolean, optional) - Room availability
    + Body

            {
                "success" : true,
                "message" : "OK",
                "data" :
                {
                    "available" : true
                }
            }

+ Response 400 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response message
        + data (object, required) - Response data
            + available (boolean, optional) - Room availability
    + Body

            {
                "success" : false,
                "message" : "Missing required parameters or invalid data",
                "data" : null
            }

+ Response 404 (application/json)
    + Attributes
        + success (boolean, required) - Request status
        + message (string, required) - Response data
        + data (object, required) - Response data
            + available (boolean, optional) - Room availability
    + Body

            {
                "success" : false,
                "message" : "Invalid ID",
                "data" : null
            }


